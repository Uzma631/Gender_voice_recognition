function gender_recognition_gui
    % Create the main figure window with a dark theme
    fig = figure('Name', 'Gender Voice Recognition', ...
        'Position', [500, 300, 500, 400], ...
        'Color', [0.15, 0.15, 0.15]);

    % Title label
    uicontrol('Style', 'text', ...
        'String', 'Gender Voice Recognition', ...
        'FontSize', 18, 'FontWeight', 'bold', ...
        'ForegroundColor', 'white', ...
        'BackgroundColor', [0.15, 0.15, 0.15], ...
        'HorizontalAlignment', 'center', ...
        'Position', [50, 340, 400, 30]);

    % Add a button to load audio
    btnLoad = uicontrol('Style', 'pushbutton', ...
        'String', 'Load Audio', ...
        'Position', [50, 280, 100, 30], ...
        'BackgroundColor', [0.25, 0.25, 0.25], ...
        'ForegroundColor', 'white', ...
        'Callback', @(~, ~) loadAudio(fig));

    % Add audio control buttons
    btnPlay = uicontrol('Style', 'pushbutton', ...
        'String', 'Play', ...
        'Position', [200, 280, 70, 30], ...
        'BackgroundColor', [0.25, 0.25, 0.25], ...
        'ForegroundColor', 'white', ...
        'Enable', 'off', ...
        'Callback', @(btn, ~) playAudio(fig, btn));

    btnPause = uicontrol('Style', 'pushbutton', ...
        'String', 'Pause', ...
        'Position', [280, 280, 70, 30], ...
        'BackgroundColor', [0.25, 0.25, 0.25], ...
        'ForegroundColor', 'white', ...
        'Enable', 'off', ...
        'Callback', @(btn, ~) pauseAudio(btn));

    btnStop = uicontrol('Style', 'pushbutton', ...
        'String', 'Stop', ...
        'Position', [360, 280, 70, 30], ...
        'BackgroundColor', [0.25, 0.25, 0.25], ...
        'ForegroundColor', 'white', ...
        'Enable', 'off', ...
        'Callback', @(btn, ~) stopAudio(btn));

    % Add axes for the waveform
    ax = axes('Parent', fig, ...
        'Position', [0.1, 0.3, 0.8, 0.3], ...
        'Color', [0.2, 0.2, 0.2], ...
        'XColor', [0.9, 0.9, 0.9], ...
        'YColor', [0.9, 0.9, 0.9]);
    xlabel(ax, 'Time (s)');
    ylabel(ax, 'Amplitude');

    % Add a label for recognition results
    lblResult = uicontrol('Style', 'text', ...
        'String', 'Gender: Not Detected', ...
        'FontSize', 14, 'FontWeight', 'bold', ...
        'ForegroundColor', 'white', ...
        'BackgroundColor', [0.15, 0.15, 0.15], ...
        'HorizontalAlignment', 'center', ...
        'Position', [50, 50, 400, 30]);

    % Store app data in UserData for better encapsulation
    fig.UserData = struct('Axes', ax, ...
                          'Label', lblResult, ...
                          'AudioData', [], ...
                          'SampleRate', [], ...
                          'Player', [], ...
                          'PlayButton', btnPlay, ...
                          'PauseButton', btnPause, ...
                          'StopButton', btnStop);
end

function loadAudio(fig)
    % Load an audio file and display its waveform
    [fileName, pathName] = uigetfile({'*.mp3;*.wav', 'Audio Files (*.mp3, *.wav)'}, ...
                                     'Select an Audio File');
    if isequal(fileName, 0)
        return; % User canceled the file selection
    end

    % Read the audio file
    filePath = fullfile(pathName, fileName);
    [audioData, sampleRate] = audioread(filePath);

    % Update figure UserData
    fig.UserData.AudioData = audioData;
    fig.UserData.SampleRate = sampleRate;

    % Plot the waveform
    ax = fig.UserData.Axes;
    timeAxis = (0:length(audioData)-1) / sampleRate;
    plot(ax, timeAxis, audioData, 'Color', 'white');
    title(ax, 'Waveform', 'Color', 'white');

    % Enable play button
    fig.UserData.PlayButton.Enable = 'on';
    fig.UserData.PauseButton.Enable = 'on';
    fig.UserData.StopButton.Enable = 'on';

    % Recognize gender (stub for integration with model)
    gender = recognizeGender(audioData, sampleRate); % Implement your model here
    fig.UserData.Label.String = ['Gender: ', gender];
end

function gender = recognizeGender(audioData, sampleRate)
    features = extractFeatures(audioData, sampleRate);
    modelFile = 'D:\Matlab\gender_svm_model.mat'; % Path to the saved SVM model
    if exist(modelFile, 'file')
        load(modelFile, 'svmModel'); % Assuming 'svmModel' is the variable saved in the .mat file
    else
        error('Model file not found');
    end
    gender = 'Male'; % Example: Default output for testing
end

function playAudio(fig, btn)
    % Play the loaded audio
    if isempty(fig.UserData.AudioData)
        return;
    end

    if isempty(fig.UserData.Player)
        fig.UserData.Player = audioplayer(fig.UserData.AudioData, fig.UserData.SampleRate);
    end
    play(fig.UserData.Player);
end

function pauseAudio(btn)
    % Pause the playing audio
    if ~isempty(btn.UserData.Player)
        pause(btn.UserData.Player);
    end
end

function stopAudio(btn)
    % Stop the playing audio
    if ~isempty(btn.UserData.Player)
        stop(btn.UserData.Player);
    end
end
